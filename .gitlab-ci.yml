variables:
  IMAGE: "artifactory.gns.cri.nz/gns/whakaaribn:0.0.4"
  APP_NAME: "whakaaribn"
  DB_APP_NAME: "whakaaribnDB"
  API_APP_NAME: "whakaaribnAPI"
  APP_SERVER: "Vulkan"
  TEAM: "Volcano"
  GESSP_OP_UID: "1000"
  GESSP_OP_GID: "999"

stages:
  - build
  - test
  - deploy

build:
  tags:
    - linux
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never 
    - when: always 
  script:
    - DOCKER_BUILDKIT=1 docker build . -t "$IMAGE" --target BASE 
    - docker image push "$IMAGE"

test:
  tags:
    - linux 
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never 
    - when: always 
  script:
    - docker run --rm "$IMAGE" /env/bin/pytest --pyargs whakaaribn.tests 
  allow_failure: true

deploy-processing:
  tags:
    - linux
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never 
    - when: always 
  before_script:
      - git clone https://oauth2:$gitlabcicd@git.gns.cri.nz/production/gessp-operational
  after_script:
      - rm -rf gessp-operational
      - git clean -fdX  
  script: |
    cat > /tmp/docker_config.json <<EOF
    {
      "Image": "${IMAGE}",
      "Cmd": ["/env/bin/bayes_daemon"],
      "HostConfig": {
        "RestartPolicy": { "Name": "always" },
        "Binds": ["bayesbox_data:/opt/data"]
      }
    }
    EOF
    cat /tmp/docker_config.json
    python3 ./gessp-operational/deploy-scripts/docker_deploy.py -a "$APP_NAME" -s "$APP_SERVER" -t "$TEAM" /tmp/docker_config.json
    rm /tmp/docker_config.json

deploy-dashboard:
  tags:
    - linux
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never 
    - when: always 
  before_script:
      - git clone https://oauth2:$gitlabcicd@git.gns.cri.nz/production/gessp-operational
  after_script:
      - rm -rf gessp-operational
      - git clean -fdX  
  script: |
    cat > /tmp/docker_config.json <<EOF
    {
      "Image": "${IMAGE}",
      "Cmd": "/env/bin/bn_dashboard",
      "HostConfig": {
        "PortBindings": { "8050/tcp": [{ "HostPort": "8051" }] },
        "ExposedPorts": { "8050/tcp": {} },
        "RestartPolicy": { "Name": "always" },
        "Binds": ["bayesbox_data:/opt/data"]
      }
    }
    EOF
    cat /tmp/docker_config.json
    python3 ./gessp-operational/deploy-scripts/docker_deploy.py -a "$DB_APP_NAME" -s "$APP_SERVER" -t "$TEAM" /tmp/docker_config.json
    rm /tmp/docker_config.json

deploy-api:
  tags:
    - linux
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never 
    - when: always 
  before_script:
      - git clone https://oauth2:$gitlabcicd@git.gns.cri.nz/production/gessp-operational
  after_script:
      - rm -rf gessp-operational
      - git clean -fdX  
  script: |
    cat > /tmp/docker_config.json <<EOF
    {
      "Image": "${IMAGE}",
      "Cmd": ["/env/bin/tonik_api", "--rootdir", "/opt/data"],
      "HostConfig": {
        "PortBindings": { "8003/tcp": [{ "HostPort": "8052" }] },
        "ExposedPorts": { "8003/tcp": {} },
        "RestartPolicy": { "Name": "always" },
        "Binds": ["bayesbox_data:/opt/data"]
      }
    }
    EOF
    cat /tmp/docker_config.json
    python3 ./gessp-operational/deploy-scripts/docker_deploy.py -a "$API_APP_NAME" -s "$APP_SERVER" -t "$TEAM" /tmp/docker_config.json
    rm /tmp/docker_config.json

build-gessp-operational:
  tags:
    - linux
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
      - git clone "https://oauth2:$gitlabcicd@git.gns.cri.nz/applications/cicdutils.git"
  after_script:
      - rm -rf cicdutils
      - git clean -fdX
  script: |
    ./cicdutils/docker_build.sh -i "$IMAGE" -b "--build-arg D_UID=${GESSP_OP_UID} --build-arg D_GID=${GESSP_OP_GID}"

deploy-gessp-operational:
  tags:
    - linux
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
      - git clone https://oauth2:$gitlabcicd@git.gns.cri.nz/production/gessp-operational
  after_script:
      - rm -rf gessp-operational
      - git clean -fdX  
  script: |
    export portainer_auth=$gessp_operational
    envsubst < gessp-operational-stack.yml > compose.yml
    python3 ./gessp-operational/deploy-scripts/docker_deploy.py --update -s "GeSSP Operational" -t $TEAM -H "https://gessp.gns.cri.nz/portainer" --stack whakaaribn compose.yml  
